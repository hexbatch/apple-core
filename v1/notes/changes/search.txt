additions to search


---------

@mutual()

returns sets that share the same tokens in this path

can combine with @set() or other, when finding the @set, then will use that set token

@set and @mutual can have an upper or lower number for members or connected sets
@set(.what)[2,5] between 2 and 5 different tokens with attribute .what
can also do [2,] for lower bounds and [,5] for upper

will give paginated if too big

------------

nested @ stuff
@mutual(@child(@user('will')))

----------------

Ancestry modifiers

~ means descended from but not including

= means exact token no descendants

=#cats.furry   -- matches cats token only
~#cats.furry   -- only descendants of this token

use in attributes and tokens
---------------------
multiple things
, comma separates  use in @set and @mutual and multiple inheritance

#catty@set(.long, =#tickle)  gets sets defined by catty or descenents which contain both tokens with long attribute and exact match for tickle

@mutual(.run, .go) gets interconnecting sets that share one or more tokens which have the attributes of .run and .go


(#runs, =#running).poking  gets a token that inherits from both runs (and descendants) and running exact

--------------------------------
@child(.who) selects any child that is a set that contains the .who attribute
@child(.who).what  above but the child token defining the set must have a who attribute
------------------------

.bookmark @child(@mutual(.gosh) )#go  a token defining a set must be a child of another set that has a bookmark attribute,
and contain at least two set tokens who have a mutual token of attribute .goth

-----------------
@view is shorthand for @set(@mutual)