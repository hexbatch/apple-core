The market layer should allow nested and grouped transactions that are requirements
should use and/or conditionals
if any of the conditional transactions do not work out (or all in an or branch fails) then the transaction does not happen

------------
perhaps there should be an earlier transaction layer, to manage these nested changes of tokens
the marketplace can call on the transaction layer to change ownership
------------
The transaction layer changes ownership of tokens (no context, it just does)
but the ownership is only changed when an agreement token is set properly.
There can be multiple parties to an agreement token, and all have to write a certain attribute to it for this agreement token to be signed
This allows multiserver transactions to occur between different tokens or users on different installs.

The transaction is made so that there is an agreement set that has to have the users put their token in, and then the ownership is changed
Users can set up transactions that expire after a certain time, or have other conditions, such as contents of tokens in a set done after a set or mutual operation is done
The creator of the transaction can delete it only if nobody has agreed yet.
A person can remove their user token if decide they changed their mind.
A transaction can be set up to have a delay or datetime to do the transaction after all signed

In the internet layer, a visiting user is wrapped in a local user, so can sign that way.


An agreement set, then do agg function of sum and match the number of the party.
Yes, set is better, only allow those users to add to the set (via the event on the set), so to agree each party of the agreement puts their user token in there.

All transactions are public and remembered and discoverable.
new transactions can start from older, already agreed on transactions but only if the same parties to the new agreement