
When trying to read a token from another server, can import tokens can have an attribute that gets a value, making the core api call wait
the network layer can revisit this when the other server responds, or updates with, the request or token value

remote token values can have a time to live, during which their value can be considered good and not need calling the home server?


need way to quickly check who owns some tracked token, and some attributes of the token are important to track (always have a reference where the token value can be found)
someplace needs to cache this and the values of this can be verified outside the originating server.
    blockchain or fedi-tech?

    ----

 nested remote transactions
    transaction chains, where tokens in each server are exchanged, in order, or reversed if any cannot be made
    I exchange these tokens on server X, and if that is done I trade these tokens on server Y, then that unlocks the transaction on my current server Z
    if any fail, then I cannot do my transaction on Z

    server X: B -> C = result H
    server Y (if result H) : C -> D = result J
    server Z (if result J) : do something

    I, a user on Z can go over to X and using my credentials on Z can do trades and set up future transactions, this is what b and c are doing. Same for Y

    but nested transactions here can all be on the same server

    A visiting user from another server does not need to be authenticated, because its done via agents who register the user automatically to visit, and the user on the visited server
    does all stuff via the proxy user set up for him. For info call the original server discussed above


    This means marketplace transactions can be agreed to be reversed before they are finalized, and reversed under a time or event condition.

    -----------------
    Agreements do not have to be public or published, but if they are published then can be used as a basis for other agreements on other servers, and there is a record of that
    The internet layer will publish agreements
    these are the events between users of different servers can be recorded in agreement and transaction chains
---------------------
tokens can be imported by the user agent (the owner of the token) connecting between the two servers. This can be made so that a live read done anytime someone reads it after a TTL
    and any api can wait on writes. But only for some attributes. This is done by overwriting the special attributes, in the token created for the import, to be a remote for read or write